{"version":3,"sources":["components/lineChart/LineChartIndex.js","components/Navigation.js","components/Home.js","components/heatMap/HeatMap.js","components/heatMap/HeatMap2.js","components/heatMap/HeatMap3.js","components/heatMap/HeatMap4.js","components/heatMap/Index.js","components/lineChart/SimpleLineChart1.js","components/lineChart/SimpleLineChart2.js","components/lineChart/LineChartWithMissingDates.js","components/barChart/SimpleBarChart1.js","components/barChart/SimpleBarChart2.js","components/barChart/SimpleBarChart3.js","components/barChart/SimpleBarChartWithMissingDates.js","components/barChart/DoubleBarChart1.js","components/barChart/DoubleBarChart2.js","components/barChart/DoubleBarChartWithFillingMissingDates.js","components/barChart/DoubleBarChart3.js","components/barChart/BarChartIndex.js","components/pieChart/PieChart1.js","components/pieChart/PieChartIndex.js","App.js","reportWebVitals.js","index.js"],"names":["data","key","Navigation","className","to","Home","Container","style","minHeight","xLabels","Array","fill","map","_","i","daySlotMap","yLabels","dataMap","length","SalesHeatMap","forEach","hourOfDay","dayOfWeekValues","dayOfWeek","count","fontSize","marginLeft","xLabelsLocation","xLabelWidth","yLabelWidth","squares","height","onClick","x","y","alert","cellStyle","background","value","min","max","color","border","cellRender","xLabelsVisibility","Math","floor","random","HeatMap2","HeatMap3","HeatMap4","title","unit","Index","Card","HeatMap","name","uv","pv","amt","SimpleLineChart1","width","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","activeDot","r","SimpleLineChart2","lineOptions","verticalAlign","item","toString","dateSeries","startDate","stopDate","dateArray","currentDate","moment","endDate","push","format","add","getDatesSeries","LineChartWithMissingDates","dateSeriesLineChart","reduce","result","date","transformedLineData","rewardId","console","log","transformedLineChartData","transformedArray","Object","values","test1","test2","data2","transformLines","lineChartLineOptions","line","Map","SimpleBarChart1","SimpleBarChart2","barOptions","xAxis","bar","tick","SimpleBarChart3","SimpleBarWithMissingDates","DoubleBarChart1","DoubleBarChart2","yAxis","key1","key2","DoubleBarChartWithFillingMissingDates","DoubleBarChart3","memberSeriesData","newCount","activeCount","customersCreatedCount","pointSeries","pointRedeemed","redeemed","pointCountRedeemed","totalRedeemedPoints","transformedCollected1","collected","collectedDate","totalCollectedPoints","transformed1","redeemedDate","transformedPointsArray1","dateSeriesRedeemedChart","pointRedeemedFill","pointRedeemedArray","dateSeriesDoublebarChart","transformedCollected","transformed","transformedPointsArray","allowDecimals","COLORS","renderActiveShape","props","RADIAN","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","dy","d","toFixed","PieChartCard","icon","useState","activeIndex","setActiveIndex","onPieEnter","useCallback","index","paddingAngle","activeShape","onMouseEnter","legendType","entry","pieChartData","genderData","keys","gender","ageData","age","tierData","tier","PieChartIndex","App","exact","path","component","LineChartIndex","BarChartIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b730315b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport SimpleLineChart1 from './SimpleLineChart1';\r\nimport SimpleLineChart2 from './SimpleLineChart2';\r\nimport LineChartWithMissingDates from './LineChartWithMissingDates';\r\n\r\nconst data2 = [\r\n    {\r\n      rewardId : 1,\r\n      date: \"2020-12-12\",\r\n      count: 12\r\n    },\r\n    {\r\n      rewardId : 2,\r\n      date: \"2020-12-12\",\r\n      count: 34\r\n    },\r\n    {\r\n      rewardId : 1,\r\n      date: \"2020-12-13\",\r\n      count: 44\r\n    },\r\n    {\r\n      rewardId : 2,\r\n      date: \"2020-12-13\",\r\n      count: 10\r\n    },\r\n    {\r\n      rewardId : 3,\r\n      date: \"2020-12-13\",\r\n      count: 13\r\n    },\r\n    {\r\n      rewardId : 4,\r\n      date: \"2020-12-13\",\r\n      count: 20\r\n    },\r\n    {\r\n      rewardId: 2,\r\n      date: \"2020-12-14\",\r\n      count: 34\r\n    },\r\n    {\r\n      rewardId : 1,\r\n      date: \"2020-12-15\",\r\n      count : 30\r\n    },\r\n    {\r\n      rewardId : 2,\r\n      date: \"2020-12-15\",\r\n      count : 23\r\n    },\r\n    {\r\n      rewardId : 3,\r\n      date: \"2020-12-15\",\r\n      count : 45\r\n    },\r\n    {\r\n      rewardId : 4,\r\n      date: \"2020-12-15\",\r\n      count : 20\r\n    },\r\n    {\r\n       rewardId : 3,\r\n       date: \"2020-12-12\",\r\n       count : 24\r\n     },\r\n     {\r\n      rewardId : 4,\r\n      date: \"2020-12-12\",\r\n      count : 15\r\n    },\r\n     {\r\n       rewardId : 3,\r\n       date: \"2020-12-14\",\r\n       count : 100\r\n     },\r\n     {\r\n      rewardId : 1,\r\n      date: \"2020-12-14\",\r\n      count : 0\r\n    },\r\n     {\r\n       rewardId : 4,\r\n       date: \"2020-12-14\",\r\n       count : 90\r\n     }\r\n  ];\r\n\r\nconst removeLineKeyDuplication = (data, key) => {\r\n    return [\r\n       ...new Map(\r\n          data.map(x => [key(x), x])\r\n       ).values()\r\n    ]\r\n  };\r\n\r\nconst transformedLineData= data2.reduce((result,{rewardId,date, count})=>{\r\n\r\n    result[date]={date: moment(date).format(\"MMM-DD\"), [rewardId]: count}\r\n    return result;\r\n},{});\r\n    \r\nconst transformedLineChartData = data2.reduce((result,{rewardId,date, count})=>{\r\n    if(result[date] && !result[rewardId]){\r\n       result[date][rewardId]=count;\r\n    }else{\r\n       result[date]={\r\n          date:moment(date).format(\"MMM-DD\"),\r\n          [rewardId]: count\r\n       }\r\n    };\r\n    \r\n    return result;\r\n\r\n},transformedLineData);\r\n\r\nconst transformedArray = Object.values(transformedLineChartData);\r\n\r\nconst transformLines = data2.reduce((result, {rewardId}) => {\r\n    result.push({key : rewardId});\r\n    return result;\r\n}, []);\r\n\r\nconst lineChartLineOptions = removeLineKeyDuplication(transformLines, line => line.key)\r\n\r\nconst Index = () => {\r\n    return (\r\n        <div className='my-4 p-2'>\r\n             <h4 className='mb-3'>Line Charts</h4>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Simple Line Chart</h6>\r\n                <div className=\"p-2\">\r\n                    < SimpleLineChart1/>\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Simple Line Chart with complex data format</h6>\r\n                <div className=\"p-2\">\r\n                    <SimpleLineChart2\r\n                    data={transformedArray}\r\n                    lineOptions={lineChartLineOptions}\r\n                  />\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Map with mock data without filling empty cells</h6>\r\n                <div className=\"p-2\">\r\n                  <LineChartWithMissingDates\r\n                    data={data2}\r\n                    lineOptions={lineChartLineOptions}\r\n                  />\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Map with mock data without values</h6>\r\n                <div className=\"p-2\">\r\n                   \r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\nexport default Index","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div className='m-3 p-2'>\r\n            <Link to='/' className='btn btn-dark mb-2 w-100'>Home</Link> <br/>\r\n            <Link to='/heat-map' className='btn btn-dark mb-2 w-100'>Heat Map</Link> <br/>\r\n            <Link to='/line-chart' className='btn btn-dark mb-2 w-100'>Line Chart</Link> <br/>\r\n            <Link to='/bar-chart' className='btn btn-dark mb-2 w-100'>Bar Chart</Link> <br/>\r\n            <Link to='/pie-chart' className='btn btn-dark mb-2 w-100'>Pie Chart</Link> <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Container \r\n            style={{minHeight:'100vh'}}\r\n        >\r\n        <div className='w-100 home-wrapper pt-4 pr-3'>\r\n            <div className='box box1'>\r\n                Heat Map\r\n            </div>\r\n            <div className='box box2'>\r\n                Line Chart\r\n            </div>\r\n            <div className='box box3'>\r\n                 Icons\r\n            </div>\r\n            <div className='box box4'>\r\n                 Modal\r\n            </div>\r\n            <div className='box box5'>\r\n                Tooltip\r\n            </div>\r\n            <div className='box box6'>\r\n                CountUp\r\n            </div>\r\n            <div className='box box7'>\r\n                Idle Timer\r\n            </div>\r\n            <div className='box box8'>\r\n                Color Picker\r\n            </div>\r\n            <div className='box box9'>\r\n                Credit Cards\r\n            </div>\r\n            <div className='box box10'>\r\n                Date Picker\r\n            </div>\r\n            <div className='box box11'>\r\n                Date Range Picker\r\n            </div>\r\n            <div className='box box12'>\r\n                Presentation Deck\r\n            </div>\r\n            <div className='box box13'>\r\n                Video Player\r\n            </div>\r\n            <div className='box box14'>\r\n                Loading Indicator\r\n            </div>\r\n            <div className='box box15'>\r\n                Charts\r\n            </div>\r\n            <div className='box box16'>\r\n                Skelton Component\r\n            </div>\r\n            <div className='box box17'>\r\n                Moment\r\n            </div>\r\n            <div className='box box18'>\r\n                Material Table\r\n            </div>\r\n            <div className='box box19'>\r\n                Drop Zone\r\n            </div>\r\n            <div className='box box20'>\r\n                Image Gallery\r\n            </div>\r\n            <div className='box box21'>\r\n                Wizard\r\n            </div>\r\n            <div className='box box22'>\r\n                Virtualized Table\r\n            </div>\r\n            <div className='box box23'>\r\n                Notifications\r\n            </div>\r\n            <div className='box box24'>\r\n                Event Time Line\r\n            </div>\r\n            <div className='box box25'>\r\n                User Avatar\r\n            </div>\r\n            <div className='box box26'>\r\n                Drawer\r\n            </div>\r\n            <div className='box box27'>\r\n                Heat Map\r\n            </div>\r\n            <div className='box box28'>\r\n                Number Format\r\n            </div>\r\n            <div className='box box29'>\r\n                Form Validation\r\n            </div>\r\n        </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport HeatMap from \"react-heatmap-grid\";\r\n\r\nconst xLabels = new Array(24).fill(0).map((_, i) => `${i}`);\r\n\r\nconst daySlotMap = {\r\n  \"Monday\": 0,\r\n  \"Tuesday\": 1,\r\n  \"Wednesday\": 2,\r\n  \"Thursday\": 3,\r\n  \"Friday\": 4,\r\n  \"Saturday\": 5,\r\n  \"Sunday\": 6\r\n\r\n}\r\nconst yLabels = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\nconst dataMap = new Array(yLabels.length)\r\n  .fill(0)\r\n  .map(() =>\r\n    new Array(xLabels.length).fill(0)\r\n  );\r\n\r\nconst data = [\r\n    {\r\n        \"hourOfDay\":\"10\",\r\n        \"dayOfWeekValues\":[\r\n            {\r\n                \"dayOfWeek\":\"Friday\",\r\n                \"count\":7\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"hourOfDay\":\"11\",\r\n        \"dayOfWeekValues\":[\r\n            {\r\n                \"dayOfWeek\":\"Monday\",\r\n                \"count\":6\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"hourOfDay\":\"20\",\r\n        \"dayOfWeekValues\":[\r\n            {\r\n                \"dayOfWeek\":\"Tuesday\",\r\n                \"count\":20\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nconst SalesHeatMap = () => {\r\n\r\n  data.forEach(({ hourOfDay, dayOfWeekValues = [] }) => {\r\n    dayOfWeekValues.forEach(({\r\n      dayOfWeek,\r\n      count\r\n    }) => {\r\n      dataMap[daySlotMap[dayOfWeek]][hourOfDay] = count;\r\n    });\r\n\r\n  });\r\n\r\n\r\n  return (\r\n    <div style={{ fontSize: \"12px\", marginLeft: '-1.5rem' }}>\r\n      <HeatMap\r\n        xLabels={xLabels}\r\n        yLabels={yLabels}\r\n        xLabelsLocation={\"top\"}\r\n        //xLabelsVisibility={xLabelsVisibility}\r\n        xLabelWidth={60}\r\n        yLabelWidth={70}\r\n        data={dataMap}\r\n        squares\r\n        height={38}\r\n        onClick={(x, y) => alert(`Clicked ${x}, ${y}`)}\r\n        cellStyle={(background, value, min, max, dataMap, x, y) => ({\r\n          background: `rgb(0, 151, 230, ${1 - (max - value) / (max - min)})`,\r\n          fontSize: \"11px\",\r\n          color: \"#444\",\r\n          border:\"1px solid #efefef\"\r\n        })}\r\n        cellRender={value => value && <div>{value}</div>}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SalesHeatMap","import React from \"react\";\r\nimport HeatMap from \"react-heatmap-grid\";\r\n\r\nconst xLabels = new Array(24).fill(0).map((_, i) => `${i}`);\r\n\r\n// Display only even labels\r\nconst xLabelsVisibility = new Array(24)\r\n  .fill(0)\r\n  .map((_, i) => (i % 2 === 0 ? true : false));\r\n\r\nconst yLabels = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\nconst data = new Array(yLabels.length)\r\n  .fill(0)\r\n  .map(() =>\r\n    new Array(xLabels.length).fill(0).map(() => Math.floor(Math.random() * 100))\r\n  );\r\n\r\n const HeatMap2 = () => {\r\n  return (\r\n    <div style={{ fontSize: \"13px\" }}>\r\n      <HeatMap\r\n        xLabels={xLabels}\r\n        yLabels={yLabels}\r\n        xLabelsLocation={\"bottom\"}\r\n        xLabelsVisibility={xLabelsVisibility}\r\n        xLabelWidth={60}\r\n        data={data}\r\n        squares\r\n        height={38}\r\n        onClick={(x, y) => alert(`Clicked ${x}, ${y}`)}\r\n        cellStyle={(background, value, min, max, data, x, y) => ({\r\n          background: `rgb(255, 251, 0, ${1 - (max - value) / (max - min)})`,\r\n          fontSize: \"11.5px\",\r\n          color: \"#222\"\r\n        })}\r\n        cellRender={value => value && <div>{value}</div>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeatMap2","import React from 'react';\r\nimport HeatMap from \"react-heatmap-grid\";\r\n\r\nconst xLabels = new Array(24).fill(0).map((_, i) => `${i}`);\r\n\r\nconst daySlotMap = {\r\n  \"Monday\": 0,\r\n  \"Tuesday\": 1,\r\n  \"Wednesday\": 2,\r\n  \"Thursday\": 3,\r\n  \"Friday\": 4,\r\n  \"Saturday\": 5,\r\n  \"Sunday\": 6\r\n\r\n}\r\nconst yLabels = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\nconst dataMap = new Array(yLabels.length)\r\n  .fill('')\r\n  .map(() =>\r\n    new Array(xLabels.length).fill('')\r\n  );\r\n\r\nconst data = [\r\n    {\r\n        \"hourOfDay\":\"10\",\r\n        \"dayOfWeekValues\":[\r\n            {\r\n                \"dayOfWeek\":\"Friday\",\r\n                \"count\":12\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"hourOfDay\":\"1\",\r\n        \"dayOfWeekValues\":[\r\n            {\r\n                \"dayOfWeek\":\"Monday\",\r\n                \"count\":30\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"hourOfDay\":\"20\",\r\n        \"dayOfWeekValues\":[\r\n            {\r\n                \"dayOfWeek\":\"Tuesday\",\r\n                \"count\":20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"hourOfDay\":\"2\",\r\n        \"dayOfWeekValues\":[\r\n            {\r\n                \"dayOfWeek\":\"Saturday\",\r\n                \"count\":3\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"hourOfDay\":\"10\",\r\n        \"dayOfWeekValues\":[\r\n            {\r\n                \"dayOfWeek\":\"Monday\",\r\n                \"count\":8\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"hourOfDay\":\"14\",\r\n        \"dayOfWeekValues\":[\r\n            {\r\n                \"dayOfWeek\":\"Wednesday\",\r\n                \"count\":16\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nconst HeatMap3 = () => {\r\n\r\n  data.forEach(({ hourOfDay, dayOfWeekValues = [] }) => {\r\n    dayOfWeekValues.forEach(({\r\n      dayOfWeek,\r\n      count\r\n    }) => {\r\n      dataMap[daySlotMap[dayOfWeek]][hourOfDay] = count;\r\n    });\r\n\r\n  });\r\n\r\n\r\n  return (\r\n    <div style={{ fontSize: \"12px\", marginLeft: '-1.5rem' }}>\r\n      <HeatMap\r\n        xLabels={xLabels}\r\n        yLabels={yLabels}\r\n        xLabelsLocation={\"top\"}\r\n        //xLabelsVisibility={xLabelsVisibility}\r\n        xLabelWidth={60}\r\n        yLabelWidth={70}\r\n        data={dataMap}\r\n        squares\r\n        height={38}\r\n        onClick={(x, y) => alert(`Clicked ${x}, ${y}`)}\r\n        cellStyle={(background, value, min, max, dataMap, x, y) => ({\r\n          background: `rgb(81, 255, 0, ${1 - (max - value) / (max - min)})`,\r\n          fontSize: \"11px\",\r\n          color: \"#444\",\r\n          border:\"1px solid #efefef\"\r\n        })}\r\n        cellRender={value => value && <div>{value}</div>}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeatMap3","import React from 'react';\r\nimport HeatMap from \"react-heatmap-grid\";\r\n\r\nconst xLabels = new Array(24).fill(0).map((_, i) => `${i}`);\r\n\r\n// Display only even labels\r\nconst xLabelsVisibility = new Array(24)\r\n  .fill(0)\r\n  .map((_, i) => (i % 2 === 0 ? true : false));\r\n\r\nconst yLabels = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\nconst data = new Array(yLabels.length)\r\n  .fill(0)\r\n  .map(() =>\r\n    new Array(xLabels.length).fill(0).map(() => Math.floor(Math.random() * 100))\r\n  );\r\n\r\nconst HeatMap4 = () => {\r\n\r\n  return (\r\n    <div style={{ fontSize: \"12px\", marginLeft: '-1.5rem' }}>\r\n      <HeatMap\r\n        xLabels={xLabels}\r\n        yLabels={yLabels}\r\n        xLabelsLocation={\"top\"}\r\n        xLabelsVisibility={xLabelsVisibility}\r\n        xLabelWidth={60}\r\n        yLabelWidth={70}\r\n        data={data}\r\n        squares={false}\r\n        height={38}\r\n        onClick={(x, y) => alert(`Clicked ${x}, ${y}`)}\r\n        cellStyle={(background, value, min, max, data, x, y) => ({\r\n          background: `rgb(214, 103, 245, ${1 - (max - value) / (max - min)})`,\r\n          fontSize: \"11px\",\r\n          color: \"#444\",\r\n          border:\"1px solid #efefef\"\r\n        })}\r\n        title={(value, unit) => `${value}`}\r\n        //cellRender={value => value && <div>{value}</div>}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeatMap4","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport HeatMap from './HeatMap';\r\nimport HeatMap2 from './HeatMap2';\r\nimport HeatMap3 from './HeatMap3';\r\nimport HeatMap4 from './HeatMap4';\r\n\r\n\r\nconst Index = () => {\r\n    return (\r\n        <div className='my-4 p-2'>\r\n             <h4 className='mb-3'>Heat Maps</h4>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Deafult Map with randomly generated values</h6>\r\n                <div className=\"p-2\">\r\n                    <HeatMap2/>\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Map with mock data with filling empty cells by 0</h6>\r\n                <div className=\"p-2\">\r\n                    <HeatMap/>\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Map with mock data without filling empty cells</h6>\r\n                <div className=\"p-2\">\r\n                    <HeatMap3/>\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Map with mock data without values</h6>\r\n                <div className=\"p-2\">\r\n                    <HeatMap4/>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\nexport default Index\r\n","import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nconst data = [\r\n    {\r\n      name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n    },\r\n    {\r\n      name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n    },\r\n    {\r\n      name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n    },\r\n    {\r\n      name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n    },\r\n    {\r\n      name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n    },\r\n    {\r\n      name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n    },\r\n    {\r\n      name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n    },\r\n  ];\r\n\r\nconst SimpleLineChart1 = () => {\r\n    return (\r\n        <LineChart\r\n        width={1000}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 5, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n      </LineChart>\r\n    )\r\n}\r\n\r\nexport default SimpleLineChart1\r\n\r\n","import React from 'react';\r\nimport {ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nconst SimpleLineChart2 = ({data, lineOptions =  [] }) => {\r\n    return (\r\n        <ResponsiveContainer\r\n            width=\"100%\"\r\n            height={400}\r\n            margin={{ top: 0, right: 10, left: 10, bottom: 0 }}\r\n        >\r\n            <LineChart\r\n                width={1000}\r\n                height={300}\r\n                data={data}\r\n                margin={{\r\n                    top: 40, right: 20, left: 20, bottom: 10,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend  verticalAlign=\"top\" height={36}/>\r\n                {lineOptions.map((item)=>{\r\n                    return (<Line key={item.key} type={item.type || \"monotone\"} dataKey={item.key||'value'} stroke={`#${Math.floor(Math.random()*16777215).toString(16)}`}  name={item.key}/>)\r\n                })}\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    )\r\n  }\r\n\r\nexport default SimpleLineChart2","import React from 'react';\r\nimport {ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport moment from 'moment';\r\n\r\nconst getDatesSeries = (startDate, stopDate) => {\r\n    let dateArray = [];\r\n    let currentDate = moment(startDate);\r\n    let endDate = moment(stopDate);\r\n    while (currentDate <= endDate) {\r\n        dateArray.push( moment(currentDate).format('YYYY-MM-DD') )\r\n        currentDate = moment(currentDate).add(1, 'days');\r\n    }\r\n    return dateArray;\r\n};\r\n\r\nconst fromDate = '2020-12-8';\r\nconst toDate = '2020-12-20';\r\n\r\nconst dateSeries = getDatesSeries(fromDate,toDate);\r\n\r\nconst LineChartWithMissingDates = ({data, lineOptions =  [] }) => {\r\n\r\n    const dateSeriesLineChart = dateSeries.reduce((result, data) => {\r\n        result[data] = { date: moment(data).format(\"MMM-DD\")};\r\n        return result;\r\n      }, {});\r\n\r\n      const transformedLineData= data.reduce((result,{rewardId,date, count})=>{\r\n        if (result[date]) {\r\n          result[date]={\r\n            date: moment(date).format(\"MMM-DD\"), \r\n            [rewardId]: count\r\n          }\r\n        }else{\r\n          result[date]={\r\n            date: moment(date).format(\"MMM-DD\"), \r\n            [rewardId]: 0\r\n          }\r\n        }\r\n        return result;\r\n        },dateSeriesLineChart);\r\n\r\n        console.log('Test 1', transformedLineData);\r\n        \r\n        const transformedLineChartData = data.reduce((result,{rewardId,date, count})=>{\r\n        if(result[date] && !result[rewardId]){\r\n           result[date][rewardId]=count;\r\n        }else{\r\n           result[date]={\r\n              date:moment(date).format(\"MMM-DD\"),\r\n              [rewardId]: count\r\n           }\r\n        };\r\n        \r\n        return result;\r\n\r\n        },transformedLineData);\r\n\r\n        console.log('Test 1', transformedLineChartData);\r\n\r\n        const transformedArray = Object.values(transformedLineChartData);\r\n\r\n        //===========================================================================\r\n\r\n        const test1 = dateSeries.reduce((result, data) => {\r\n          result.push({ name: '', count: [] });\r\n          return result;\r\n      }, []);\r\n\r\n      console.log('Testing', test1);\r\n  \r\n      const test2 = data.reduce((result,{rewardId,date, count }) => {\r\n          result[rewardId] = { date: moment(date).format(\"MMM-DD\"), name: rewardId, count: count }\r\n          return result;\r\n      }, {});\r\n\r\n      console.log('Testing2', test2);\r\n  \r\n      // const transformed1 = pointSeries.redeemed.reduce((result, { redeemedDate, totalRedeemedPoints }) => {\r\n      //     if (result[redeemedDate]) {\r\n      //         result[redeemedDate].redeemed = totalRedeemedPoints;\r\n      //     } else {\r\n      //         result[redeemedDate] = {\r\n      //             date: moment(redeemedDate).format(\"MMM-DD\"),\r\n      //             collected: 0,\r\n      //             redeemed: totalRedeemedPoints\r\n      //         };\r\n      //     }\r\n  \r\n      //     return result;\r\n  \r\n      // }, transformedCollected1);\r\n  \r\n      // const transformedPointsArray1 = Object.values(transformed1);\r\n\r\n    return (\r\n        <ResponsiveContainer\r\n        width=\"100%\"\r\n        height={400}\r\n        margin={{ top: 0, right: 10, left: 10, bottom: 0 }}\r\n    >\r\n        <LineChart\r\n            width={1000}\r\n            height={300}\r\n            data={transformedArray}\r\n            margin={{\r\n                top: 40, right: 20, left: 20, bottom: 10,\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"date\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend  verticalAlign=\"top\" height={36}/>\r\n            {lineOptions.map((item)=>{\r\n                return (<Line key={item.key} type={item.type || \"monotone\"} dataKey={item.key||'value'} stroke={`#${Math.floor(Math.random()*16777215).toString(16)}`}  name={item.key}/>)\r\n            })}\r\n        </LineChart>\r\n    </ResponsiveContainer>\r\n    )\r\n}\r\n\r\nexport default LineChartWithMissingDates\r\n","import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nconst data = [\r\n    {\r\n      name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n    },\r\n    {\r\n      name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n    },\r\n    {\r\n      name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n    },\r\n    {\r\n      name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n    },\r\n    {\r\n      name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n    },\r\n    {\r\n      name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n    },\r\n    {\r\n      name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n    },\r\n  ];\r\n\r\nconst SimpleBarChart1 = () => {\r\n    return (\r\n        <BarChart\r\n            width={800}\r\n            height={300}\r\n            data={data}\r\n            margin={{\r\n                top: 5, right: 30, left: 20, bottom: 5,\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n      </BarChart>\r\n    )\r\n}\r\n\r\nexport default SimpleBarChart1\r\n","import React from 'react';\r\nimport { BarChart, Bar, XAxis,YAxis } from 'recharts';\r\n\r\nconst SimpleBarChart2 = ({ color, data, barOptions = { xAxis: {}, bar: []},}) => {\r\n    return (\r\n        <BarChart width={500} height={150} data={data}>\r\n            {barOptions.bar.map((item) => {\r\n              return (\r\n                <Bar\r\n                  dataKey={item.key}\r\n                  key={item.key}\r\n                  fill={color}\r\n                />\r\n              );\r\n            })\r\n            }\r\n            <XAxis dataKey=\"key\" tick={{ fontSize: 10 }}/>\r\n            <YAxis tick={{ fontSize: 10 }}/>\r\n          </BarChart>\r\n    )\r\n}\r\n\r\nexport default SimpleBarChart2\r\n","import React from 'react';\r\nimport { BarChart, Bar, XAxis,YAxis } from 'recharts';\r\n\r\nconst SimpleBarChart3 = ({ color, data, barOptions = { xAxis: {}, bar: []},}) => {\r\n    return (\r\n        <BarChart width={500} height={150} data={data}>\r\n            {barOptions.bar.map((item) => {\r\n              return (\r\n                <Bar\r\n                  dataKey={item.key}\r\n                  key={item.key}\r\n                  fill={color}\r\n                />\r\n              );\r\n            })\r\n            }\r\n            <XAxis dataKey=\"date\" tick={{ fontSize: 10 }}/>\r\n            <YAxis tick={{ fontSize: 10 }}/>\r\n          </BarChart>\r\n    )\r\n}\r\n\r\nexport default SimpleBarChart3","import React from 'react';\r\nimport { BarChart, Bar, XAxis,YAxis } from 'recharts';\r\n\r\nconst SimpleBarWithMissingDates = ({ color, data, barOptions = { xAxis: {}, bar: []},}) => {\r\n    return (\r\n        <BarChart width={500} height={150} data={data}>\r\n            {barOptions.bar.map((item) => {\r\n              return (\r\n                <Bar\r\n                  dataKey={item.key}\r\n                  key={item.key}\r\n                  fill={color}\r\n                />\r\n              );\r\n            })\r\n            }\r\n            <XAxis dataKey=\"date\" tick={{ fontSize: 10 }}/>\r\n            <YAxis tick={{ fontSize: 10 }}/>\r\n          </BarChart>\r\n    )\r\n}\r\n\r\nexport default SimpleBarWithMissingDates","import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nconst data = [\r\n    {\r\n      name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n    },\r\n    {\r\n      name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n    },\r\n    {\r\n      name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n    },\r\n    {\r\n      name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n    },\r\n    {\r\n      name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n    },\r\n    {\r\n      name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n    },\r\n    {\r\n      name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n    },\r\n  ];\r\n\r\nconst DoubleBarChart1 = () => {\r\n    return (\r\n        <BarChart\r\n            width={800}\r\n            height={300}\r\n            data={data}\r\n            margin={{\r\n                top: 5, right: 30, left: 20, bottom: 5,\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n            <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n      </BarChart>\r\n    )\r\n}\r\n\r\nexport default DoubleBarChart1","import React from 'react';\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\nconst DoubleBarChart2 = ({data,barOptions = { xAxis: {}, yAxis: {}, bar: [] }}) => {\r\n\r\n    return (\r\n                <BarChart \r\n                    width={1000} \r\n                    height={300} \r\n                    data={data}\r\n                    margin={{\r\n                        top: 40, right: 20, left: 60, bottom: 10,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"key\" tick={{ fontSize: 10 }}/>\r\n                    <YAxis tick={{ fontSize: 10 }} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={36}/>\r\n                    {barOptions.bar.map((item) => {\r\n                        return (\r\n                            <Bar \r\n                                dataKey={item.key1} \r\n                                key={item.key1}\r\n                                fill=\"#8884d8\" \r\n                            />\r\n                        );\r\n                    })\r\n                    }\r\n                    {barOptions.bar.map((item) => {\r\n                        return (\r\n                            <Bar \r\n                                dataKey={item.key2} \r\n                                key={item.key2}\r\n                                fill=\"#64dbfe\" \r\n                            />\r\n                        );\r\n                    })\r\n                    }\r\n                </BarChart>  \r\n    )\r\n}\r\n\r\nexport default DoubleBarChart2\r\n","import React from 'react';\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\nconst DoubleBarChartWithFillingMissingDates = ({data,barOptions = { xAxis: {}, yAxis: {}, bar: [] }}) => {\r\n    return (\r\n        <BarChart \r\n                    width={1000} \r\n                    height={300} \r\n                    data={data}\r\n                    margin={{\r\n                        top: 40, right: 20, left: 60, bottom: 10,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" tick={{ fontSize: 10 }}/>\r\n                    <YAxis tick={{ fontSize: 10 }} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={36}/>\r\n                    {barOptions.bar.map((item) => {\r\n                        return (\r\n                            <Bar \r\n                                dataKey={item.key1} \r\n                                key={item.key1}\r\n                                fill=\"#8884d8\" \r\n                            />\r\n                        );\r\n                    })\r\n                    }\r\n                    {barOptions.bar.map((item) => {\r\n                        return (\r\n                            <Bar \r\n                                dataKey={item.key2} \r\n                                key={item.key2}\r\n                                fill=\"#64dbfe\" \r\n                            />\r\n                        );\r\n                    })\r\n                    }\r\n                </BarChart>  \r\n    )\r\n}\r\n\r\nexport default DoubleBarChartWithFillingMissingDates\r\n","import React from 'react';\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\nconst DoubleBarChart3 = ({data,barOptions = { xAxis: {}, yAxis: {}, bar: [] }}) => {\r\n\r\n    return (\r\n                <BarChart \r\n                    width={900} \r\n                    height={300} \r\n                    data={data}\r\n                    margin={{\r\n                        top: 40, right: 20, left: 60, bottom: 10,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" tick={{ fontSize: 10 }}/>\r\n                    <YAxis tick={{ fontSize: 10 }} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={36}/>\r\n                    {barOptions.bar.map((item) => {\r\n                        return (\r\n                            <Bar \r\n                                dataKey={item.key1} \r\n                                key={item.key1}\r\n                                fill=\"#8884d8\" \r\n                            />\r\n                        );\r\n                    })\r\n                    }\r\n                    {barOptions.bar.map((item) => {\r\n                        return (\r\n                            <Bar \r\n                                dataKey={item.key2} \r\n                                key={item.key2}\r\n                                fill=\"#64dbfe\" \r\n                            />\r\n                        );\r\n                    })\r\n                    }\r\n                </BarChart> \r\n    )\r\n}\r\n\r\nexport default DoubleBarChart3","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport SimpleBarChart1 from './SimpleBarChart1';\r\nimport SimpleBarChart2 from './SimpleBarChart2';\r\nimport SimpleBarChart3 from './SimpleBarChart3';\r\nimport SimpleBarWithMissingDates from './SimpleBarChartWithMissingDates';\r\nimport DoubleBarChart1 from './DoubleBarChart1';\r\nimport DoubleBarChart2 from './DoubleBarChart2';\r\nimport DoubleBarChartWithFillingMissingDates from './DoubleBarChartWithFillingMissingDates';\r\nimport DoubleBarChart3 from './DoubleBarChart3';\r\n\r\nconst userSeries = [\r\n    {\r\n      date: \"2020-12-12\",\r\n      newCount : 12,\r\n      activeCount : 20\r\n    },\r\n    {\r\n        date: \"2020-12-13\",\r\n        newCount : 4,\r\n        activeCount : 30\r\n    },\r\n    {\r\n        date: \"2020-12-16\",\r\n        newCount : 10,\r\n        activeCount : 50\r\n    },\r\n    {\r\n        date: \"2020-12-20\",\r\n        newCount : 2,\r\n        activeCount : 46\r\n    }\r\n  ];\r\n\r\n  const memberSeriesData = userSeries.reduce((result, data) => {\r\n      result.push({ key: moment(data[\"date\"]).format(\"MMM-DD\"), activeCount: data.activeCount, customersCreatedCount : data.newCount });\r\n      return result;\r\n    }, []);\r\n\r\nconst pointSeries =   {\"collected\": [\r\n                        {\r\n                            \"collectedDate\":\"2020-12-12\",\r\n                            \"totalCollectedPoints\":50\r\n                        },\r\n                        {   \"collectedDate\":\"2020-12-16\",\r\n                            \"totalCollectedPoints\": 34\r\n                        },\r\n                        {   \"collectedDate\":\"2020-12-17\",\r\n                            \"totalCollectedPoints\": 18\r\n                        }],\r\n                        \"redeemed\":[\r\n                            {\r\n                                \"redeemedDate\":\"2020-12-11\",\r\n                                \"totalRedeemedPoints\": 45\r\n                            },\r\n                            {   \"redeemedDate\":\"2020-12-12\",\r\n                                \"totalRedeemedPoints\": 10\r\n                            },\r\n                            {   \"redeemedDate\":\"2020-12-16\",\r\n                                \"totalRedeemedPoints\": 20\r\n                            }\r\n                        ]\r\n                    };\r\n\r\n    const pointRedeemed = pointSeries.redeemed.reduce((result, data) => {\r\n        result.push({ date: moment(data[\"redeemedDate\"]).format(\"MMM-DD\"), pointCountRedeemed: data.totalRedeemedPoints });\r\n        return result;\r\n    }, []);\r\n\r\n    const transformedCollected1 = pointSeries.collected.reduce((result, { collectedDate, totalCollectedPoints = 0 }) => {\r\n        result[collectedDate] = { date: moment(collectedDate).format(\"MMM-DD\"), collected: totalCollectedPoints, redeemed: 0 }\r\n        return result;\r\n    }, {});\r\n\r\n    const transformed1 = pointSeries.redeemed.reduce((result, { redeemedDate, totalRedeemedPoints }) => {\r\n        if (result[redeemedDate]) {\r\n            result[redeemedDate].redeemed = totalRedeemedPoints;\r\n        } else {\r\n            result[redeemedDate] = {\r\n                date: moment(redeemedDate).format(\"MMM-DD\"),\r\n                collected: 0,\r\n                redeemed: totalRedeemedPoints\r\n            };\r\n        }\r\n\r\n        return result;\r\n\r\n    }, transformedCollected1);\r\n\r\n    const transformedPointsArray1 = Object.values(transformed1);\r\n\r\n    // Filling missing data \r\n\r\n    const getDatesSeries = (startDate, stopDate) => {\r\n        let dateArray = [];\r\n        let currentDate = moment(startDate);\r\n        let endDate = moment(stopDate);\r\n        while (currentDate <= endDate) {\r\n            dateArray.push( moment(currentDate).format('YYYY-MM-DD') )\r\n            currentDate = moment(currentDate).add(1, 'days');\r\n        }\r\n        return dateArray;\r\n    };\r\n    \r\n    const fromDate = '2020-12-8';\r\n    const toDate = '2020-12-20';\r\n    \r\n    const dateSeries = getDatesSeries(fromDate,toDate);\r\n\r\n    const dateSeriesRedeemedChart = dateSeries.reduce((result, data) => {\r\n        result[data] = { date: moment(data).format(\"MMM-DD\"), pointCountRedeemed: 0 };\r\n        return result;\r\n    }, {});\r\n\r\n    const pointRedeemedFill = pointSeries.redeemed.reduce((result,  { redeemedDate, totalRedeemedPoints=0 }) => {\r\n        if (result[redeemedDate]) {\r\n        result[redeemedDate] = { date: moment(redeemedDate).format(\"MMM-DD\"), pointCountRedeemed: totalRedeemedPoints }\r\n        }\r\n        return result;\r\n    }, dateSeriesRedeemedChart);\r\n\r\n    const pointRedeemedArray = Object.values(pointRedeemedFill);\r\n\r\n    \r\n\r\n    // For missing dates in double bar chart\r\n\r\n    const dateSeriesDoublebarChart = dateSeries.reduce((result, data) => {\r\n        result[data] = { date: moment(data).format(\"MMM-DD\"), collected: 0, redeemed: 0 };\r\n        return result;\r\n    }, {});\r\n\r\n    const transformedCollected = pointSeries.collected.reduce((result, { collectedDate, totalCollectedPoints = 0 }) => {\r\n        if (result[collectedDate]) {\r\n        result[collectedDate] = { date: moment(collectedDate).format(\"MMM-DD\"), collected: totalCollectedPoints, redeemed: 0 }\r\n        }else {\r\n            result[collectedDate] = {\r\n                date: moment(collectedDate).format(\"MMM-DD\"),\r\n                collected: 0,\r\n                redeemed: 0\r\n            };\r\n        }\r\n        return result;\r\n    }, dateSeriesDoublebarChart)\r\n\r\n    const transformed = pointSeries.redeemed.reduce((result, { redeemedDate, totalRedeemedPoints }) => {\r\n        if (result[redeemedDate]) {\r\n            result[redeemedDate].redeemed = totalRedeemedPoints;\r\n        } else {\r\n            result[redeemedDate] = {\r\n                date: moment(redeemedDate).format(\"MMM-DD\"),\r\n                collected: 0,\r\n                redeemed: totalRedeemedPoints\r\n            };\r\n        }\r\n\r\n        return result;\r\n\r\n    }, transformedCollected);\r\n\r\n    const transformedPointsArray = Object.values(transformed);\r\n\r\nconst Index = () => {\r\n    return (\r\n        <div className='my-4 p-2'>\r\n             <h4 className='mb-3'>Line Charts</h4>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Simple Bar Chart- Default Data Format</h6>\r\n                <div className=\"p-2\">\r\n                   <SimpleBarChart1/>\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Simple Bar Chart with complex data format 1</h6>\r\n                <div className=\"p-2\">\r\n                    <SimpleBarChart2\r\n                       data={memberSeriesData}\r\n                        barOptions={{ xAxis: { key: \"key\", type: \"category\"}, bar: [{ key: 'customersCreatedCount'}] }}\r\n                        color='#8884d8'\r\n                    />\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Simple Bar Chart with complex data format 2</h6>\r\n                <div className=\"p-2\">\r\n                    <SimpleBarChart3\r\n                       data={pointRedeemed}\r\n                        barOptions={{ xAxis: { key: \"date\", type: \"category\" }, bar: [{ key: 'pointCountRedeemed' }] }}\r\n                        color='#64dbfe'\r\n                    />\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Simple Bar Chart with filling missing dates</h6>\r\n                <div className=\"p-2\">\r\n                   <SimpleBarWithMissingDates\r\n                         data={pointRedeemedArray}\r\n                         barOptions={{ xAxis: { key: \"date\", type: \"category\" }, bar: [{ key: 'pointCountRedeemed' }] }}\r\n                         color='#64dbfe'\r\n                   />\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Double Bar Chart- Default Data Format</h6>\r\n                <div className=\"p-2\">\r\n                   <DoubleBarChart1/>\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Double Bar Chart with complex data format 1</h6>\r\n                <div className=\"p-2\">\r\n                <DoubleBarChart2\r\n                    data={memberSeriesData}\r\n                    barOptions={{ xAxis: { key: \"key\", type: \"category\"}, bar: [{ key1: 'activeCount', key2:'customersCreatedCount'}] }}\r\n                />\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Double Bar Chart with complex data format 2</h6>\r\n                <div className=\"p-2\">\r\n                    <DoubleBarChart3\r\n                        data={transformedPointsArray1}\r\n                        barOptions={{ yAxis: { type: \"number\", allowDecimals: false }, xAxis: { key: \"date\", type: \"category\" }, bar: [{ key1: 'collected', key2: 'redeemed' }] }}\r\n                    />\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Double Bar Chart with filling missing dates</h6>\r\n                <div className=\"p-2\">\r\n                    <DoubleBarChartWithFillingMissingDates\r\n                        data={transformedPointsArray}\r\n                        barOptions={{ yAxis: { type: \"number\", allowDecimals: false }, xAxis: { key: \"date\", type: \"category\" }, bar: [{ key1: 'collected', key2: 'redeemed' }] }}\r\n                    />\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\nexport default Index","import React, {useState, useCallback} from 'react';\r\nimport { PieChart, Pie,  Sector, Cell} from 'recharts';\r\nimport './PieChart1.css';\r\n\r\nconst COLORS = ['#FF9081', '#FFDA83', '#A3A0FB', '#82CA9D', '#64DBFE'];\r\n\r\nconst renderActiveShape = (props) => {\r\n    const RADIAN = Math.PI / 180;\r\n    const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\r\n        fill, payload, percent, value } = props;\r\n    const sin = Math.sin(-RADIAN * midAngle);\r\n    const cos = Math.cos(-RADIAN * midAngle);\r\n    const sx = cx + (outerRadius + 5) * cos;\r\n    const sy = cy + (outerRadius + 5) * sin;\r\n    const mx = cx + (outerRadius + 15) * cos;\r\n    const my = cy + (outerRadius + 15) * sin;\r\n    const ex = mx + (cos >= 0 ? 1 : -1) * 8;\r\n    const ey = my;\r\n    const textAnchor = cos >= 0 ? 'start' : 'end';\r\n\r\n    return (\r\n        <g>\r\n            <text className=\"selected-label\" x={cx} y={cy + 10} dy={8} textAnchor=\"middle\" fill={fill}>{payload.name}</text>\r\n            <icon x={cx - 10} y={cy - 20} width={20} height={20} className=\"pie-chart-icon\" />\r\n            <Sector\r\n                cx={cx}\r\n                cy={cy}\r\n                innerRadius={innerRadius}\r\n                outerRadius={outerRadius}\r\n                startAngle={startAngle}\r\n                endAngle={endAngle}\r\n                fill={fill}\r\n            />\r\n            <Sector\r\n                cx={cx}\r\n                cy={cy}\r\n                startAngle={startAngle}\r\n                endAngle={endAngle}\r\n                innerRadius={outerRadius + 6}\r\n                outerRadius={outerRadius + 10}\r\n                fill={fill}\r\n            />\r\n            <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\r\n            <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n            <text className=\"pie-labels\" x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`PV ${value}`}</text>\r\n            <text className=\"pie-labels\" x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\r\n                {`(Rate ${(percent * 100).toFixed(2)}%)`}\r\n            </text>\r\n        </g>\r\n    );\r\n};\r\n\r\nconst PieChartCard = ({data,title, icon}) => {\r\n\r\n   const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n   const onPieEnter = useCallback((data, index) => {\r\n            setActiveIndex(index);\r\n    },[setActiveIndex]);\r\n\r\n    return (\r\n        <div>\r\n            <h5>{title}</h5>\r\n            <PieChart width={330} height={220}>\r\n                <Pie\r\n                    data={data}\r\n                    // cx={80}\r\n                    // cy={80}\r\n                    innerRadius={45}\r\n                    outerRadius={70}\r\n                    fill=\"#8884d8\"\r\n                    paddingAngle={5}\r\n                    dataKey=\"value\"\r\n                    activeIndex={activeIndex}\r\n                    activeShape={renderActiveShape}\r\n                    onMouseEnter={onPieEnter}\r\n                    legendType=\"square\"\r\n                    startAngle={90}\r\n                    endAngle={450}\r\n                >\r\n                    {\r\n                        data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                    }\r\n                </Pie>\r\n            </PieChart> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PieChartCard","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport PieChart1 from './PieChart1';\r\n\r\nconst pieChartData = {\r\n    \"gender\":{\r\n        \"male\":17,\r\n        \"female\":5\r\n    },\r\n    \"age\":{\r\n        \"18-30\":4,\r\n        \"31-40\":1,\r\n        \"40-50\":7,\r\n        \"50-60\":20,\r\n        \"other\":13\r\n    },\r\n    \"tier\":{\r\n        \"bronze\":2,\r\n        \"gold\":5,\r\n        \"silver\":2\r\n    }\r\n};\r\n\r\nconst genderData = Object.keys(pieChartData.gender).map((key) => ({ 'name' : key, 'value' : pieChartData.gender[key]}));\r\nconst ageData = Object.keys(pieChartData.age).map((key) => ({ 'name' : key, 'value' : pieChartData.age[key]}));\r\nconst tierData = Object.keys(pieChartData.tier).map((key) => ({ 'name' : key, 'value' : pieChartData.tier[key]}));\r\n\r\nconst PieChartIndex = () => {\r\n    return (\r\n        <div>\r\n            <h2>Custom pie charts</h2>\r\n            <div className='mb-3 d-flex justify-content-between'>\r\n                <Card className='p-3 mb-3 mr-2'>\r\n                    <PieChart1 title='Tier Distribution' data={tierData} />\r\n                </Card>\r\n                <Card className='p-3 mb-3 mr-2'>\r\n                    <PieChart1 title='Age Distribution' data={ageData} />\r\n                </Card>\r\n                <Card className='p-3 mb-3'>\r\n                    <PieChart1 title='Gender Distribution' data={genderData} />\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PieChartIndex\r\n","import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Navigation from './components/Navigation';\nimport Home from './components/Home';\nimport Index from './components/heatMap/Index';\nimport LineChartIndex from './components/lineChart/LineChartIndex';\nimport BarChartIndex from './components/barChart/BarChartIndex';\nimport PieChartIndex from './components/pieChart/PieChartIndex';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Router>\n      <div className='wrapper'>\n        <div className='side'>\n          <Navigation/>\n        </div>\n        <div className='main'>\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route path='/heat-map' component={Index}/>\n            <Route path='/line-chart' component={LineChartIndex}/>\n            <Route path='/bar-chart' component={BarChartIndex}/>\n            <Route path='/pie-chart' component={PieChartIndex}/>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}